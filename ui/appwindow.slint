import { Button, VerticalBox, TextEdit, HorizontalBox, ListView, Switch, ComboBox, StandardButton } from "std-widgets.slint";

export component AppWindow inherits Window {
    width: 720px;
    height: 400px;
    title: "Universal Converter";
    in-out property <string> input_text;
    in-out property <string> input_text_type;
    in-out property <string> output_text;
    in-out property <string> info_text;
    callback convert_text(string, string, string);

    VerticalBox {
        VerticalBox {
            HorizontalBox {
                Text {
                    max-height: 30px;
                    min-width: 100px;
                    text: "Input";
                    font-size: 18px;
                    horizontal-alignment: TextHorizontalAlignment.left;
                    vertical-alignment: TextVerticalAlignment.center;
                }

                input_type := ComboBox {
                    y: 0px;
                    width: 200px;
                    max-height: 30px;
                    model: ["ascii",
                            // "base64",
                            // "Hex",
                            // "Decimal",
                            // "Binary",
                        ];
                    current-value: "ascii";
                    enabled: true;
                    accessible-label: input_text_type;
                }
            }

            TextEdit {
                max-height: 260px;
                text <=> root.input_text;
                enabled: true;
                font-size: 18px;
                horizontal-alignment: TextHorizontalAlignment.left;
                accessible-label: "ASCII Text";
            }
        }

        VerticalBox {
            HorizontalBox {
                Text {
                    max-height: 30px;
                    min-width: 100px;
                    text: "Output";
                    font-size: 18px;
                    vertical-alignment: TextVerticalAlignment.center;
                    wrap: TextWrap.no-wrap;
                }

                output_type := ComboBox {
                    y: 0px;
                    width: 200px;
                    max-height: 30px;
                    model: ["base64", "Hex", "Decimal", "Binary", "ROT13" ];
                    current-value: "base64";
                    enabled: true;
                    selected => {
                        root.convert_text(root.input_text, input_type.current-value, output_type.current-value);
                    }
                }
            }

            TextEdit {
                max-height: 260px;
                text: root.output_text;
                enabled: true;
                horizontal-alignment: TextHorizontalAlignment.left;
                font-size: 18px;
                accessible-label: "Output";
            }
        }

        VerticalBox {
            alignment: LayoutAlignment.center;
            max-height: 10px;
            info_text := Text {
                font-size: 14px;
                height: 30px;
                horizontal-alignment: TextHorizontalAlignment.center;
                color: Colors.red;
            }
            translate_button := Button {
                max-height: 20px;
                enabled: true;
                visible: true;
                width: 100px;
                text: "Convert";
                primary: true;
                clicked => {
                    root.convert_text(root.input_text,  input_type.current-value , output_type.current-value);
                }
            }
        }
    }
}
